/* Import all components */
@import 'semantic';
@import 'pxt';
@import 'themes/default/globals/site.variables';
@import 'themes/pxt/globals/site.variables';
@import 'site/globals/site.variables';

/* Reference import */
@import (reference) "semantic.less";

/* Montserrat font */
@MontserratFont: data-uri("../docs/static/fonts/Montserrat-Regular.woff");

@font-face  {
    font-family: 'Montserrat';
    src: @MontserratFont format("woff");
}

.ui.item.logo .name {
    font-size: 15px;
    font-family: @headerFont;
    font-weight: 400;
    text-transform: uppercase;
    margin-left: 1rem;
}

rect:hover {
    opacity: 0.5;
    border-color: "yellow";
    border-width: 1px;
}

#simulators {
    padding: 5px;
}

div.simframe {
    overflow: hidden;
    border-radius: 20px;
    z-index: 100;
    background: gray !important;
    box-shadow: 0 14px 40px 0 rgba(197,94,132,.25);
}

#simulator {
    padding: 0px;
}

#filelist {
    padding: 0px;
    background: #f9fafb data-uri('../docs/static/simback.svg') 0 0 repeat !important;
}

#menubar .ui.menu.fixed .item.editor-menuitem .ui.grid {
    background: #cf357e !important;
    border: 3px solid rgba(255,255,255, 0.5);
}

#editortools {
    background: #cf357e;
    background-image: linear-gradient(302deg,#9C00FF,#cf357e 50%,#ff8d10);
    background-image: data-uri('../docs/static/simback.svg'), linear-gradient(302deg,#9C00FF,#cf357e 50%,#ff8d10);
    background-position: 0 0;
    background-repeat: repeat;
}

#downloadArea {
    background: transparent !important;
}

/* Full screen */
.fullscreensim #boardview {
    padding: 0;
    padding-top: @mainMenuHeight;
    height: calc(100% - @mainMenuHeight);
}
.fullscreensim #simulators {
    padding: 0;
}

/* Mobile */
@media only screen and (max-width: @largestMobileScreen) {
    #filelist {
        background: transparent !important;
    }
}

/* Tablet */
@media only screen and (min-width: @tabletBreakpoint) and (max-width: @largestTabletScreen) {
    #filelist {
        background: transparent !important;
    }
}

/* Small Monitor */
@media only screen and (min-width: @computerBreakpoint) and (max-width: @largestSmallMonitor) {
}

/* Large Monitor */
@media only screen and (min-width: @largeMonitorBreakpoint) {
}
